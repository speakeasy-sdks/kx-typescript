/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import {
    DistanceMetric,
    DistanceMetric$inboundSchema,
    DistanceMetric$outboundSchema,
} from "./distancemetric.js";
import * as z from "zod";

/**
 * Type of the index.
 */
export const IVFIndexType = {
    Ivf: "ivf",
} as const;
/**
 * Type of the index.
 */
export type IVFIndexType = ClosedEnum<typeof IVFIndexType>;

export type IVFIndex = {
    /**
     * Type of the index.
     */
    type: IVFIndexType;
    /**
     * Distance metric.
     */
    metric: DistanceMetric;
    /**
     * Number of cells to create (aka clusters, partitions, nlists)
     */
    nclusters?: number | undefined;
    /**
     * Number of vectors supplied for training in initial batches
     */
    trainingVectors: number;
};

/** @internal */
export const IVFIndexType$inboundSchema: z.ZodNativeEnum<typeof IVFIndexType> =
    z.nativeEnum(IVFIndexType);

/** @internal */
export const IVFIndexType$outboundSchema: z.ZodNativeEnum<typeof IVFIndexType> =
    IVFIndexType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IVFIndexType$ {
    /** @deprecated use `IVFIndexType$inboundSchema` instead. */
    export const inboundSchema = IVFIndexType$inboundSchema;
    /** @deprecated use `IVFIndexType$outboundSchema` instead. */
    export const outboundSchema = IVFIndexType$outboundSchema;
}

/** @internal */
export const IVFIndex$inboundSchema: z.ZodType<IVFIndex, z.ZodTypeDef, unknown> = z.object({
    type: IVFIndexType$inboundSchema,
    metric: DistanceMetric$inboundSchema,
    nclusters: z.number().int().optional(),
    trainingVectors: z.number().int(),
});

/** @internal */
export type IVFIndex$Outbound = {
    type: string;
    metric: string;
    nclusters?: number | undefined;
    trainingVectors: number;
};

/** @internal */
export const IVFIndex$outboundSchema: z.ZodType<IVFIndex$Outbound, z.ZodTypeDef, IVFIndex> =
    z.object({
        type: IVFIndexType$outboundSchema,
        metric: DistanceMetric$outboundSchema,
        nclusters: z.number().int().optional(),
        trainingVectors: z.number().int(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace IVFIndex$ {
    /** @deprecated use `IVFIndex$inboundSchema` instead. */
    export const inboundSchema = IVFIndex$inboundSchema;
    /** @deprecated use `IVFIndex$outboundSchema` instead. */
    export const outboundSchema = IVFIndex$outboundSchema;
    /** @deprecated use `IVFIndex$Outbound` instead. */
    export type Outbound = IVFIndex$Outbound;
}
