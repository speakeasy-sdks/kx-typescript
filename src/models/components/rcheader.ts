/*
 * Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.
 */

import * as z from "zod";

export type RCHeader = {
    /**
     * Application information. An error reason string. Used in successful HTTP responses, where a database error has occurred
     */
    ai?: string | undefined;
    /**
     * Application code. Non zero if a database error has occurred
     */
    ac?: number | undefined;
    /**
     * Return code. Non-zero if ac is set or the resource-coordinator encountered an error
     */
    rc?: number | undefined;
};

/** @internal */
export const RCHeader$inboundSchema: z.ZodType<RCHeader, z.ZodTypeDef, unknown> = z.object({
    ai: z.string().optional(),
    ac: z.number().int().optional(),
    rc: z.number().int().optional(),
});

/** @internal */
export type RCHeader$Outbound = {
    ai?: string | undefined;
    ac?: number | undefined;
    rc?: number | undefined;
};

/** @internal */
export const RCHeader$outboundSchema: z.ZodType<RCHeader$Outbound, z.ZodTypeDef, RCHeader> =
    z.object({
        ai: z.string().optional(),
        ac: z.number().int().optional(),
        rc: z.number().int().optional(),
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace RCHeader$ {
    /** @deprecated use `RCHeader$inboundSchema` instead. */
    export const inboundSchema = RCHeader$inboundSchema;
    /** @deprecated use `RCHeader$outboundSchema` instead. */
    export const outboundSchema = RCHeader$outboundSchema;
    /** @deprecated use `RCHeader$Outbound` instead. */
    export type Outbound = RCHeader$Outbound;
}
